import{j as e,M as d}from"./DocsRenderer-CFRXHY34-BwR9UgVr.js";import{useMDXComponents as t}from"./index-Ch4n-_Zu.js";import"./index-2c5hLoMp.js";import{M as i}from"./mdx-page-with-theme-section-e5iHczJi.js";import"./index-C33_amOP.js";import"./react-18-B-IeCXFN.js";import"./iframe-B2AMzJkg.js";import"./index-Cghhjyi9.js";import"./index-DrFu-skq.js";import"./preview-Bzb66UsU.js";const c=[{id:"selection_usedebug",name:"useDebug()"}];function r(s){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...t(),...s.components};return e.jsxs(e.Fragment,{children:[e.jsx(d,{title:"Utils/Use Debug"}),`
`,e.jsxs(i,{breadcrumb:"Utils",title:"Use Debug",tocItems:c,hideThemeSwitcher:!0,children:[e.jsx("div",{}),e.jsxs("div",{id:"selection_usedebug",children:[e.jsx(n.h2,{id:"usedebug",children:"useDebug()"}),e.jsx(n.pre,{children:e.jsx(n.code,{className:"language-ts",children:`function useDebug(prefix: string, changes?: any[]): void
`})}),e.jsx(n.p,{children:"A custom hook that logs debug information for the component lifecycle and change events."}),e.jsx(n.h3,{id:"parameters",children:"Parameters"}),e.jsx("div",{className:"arg-type-table-wrapper",children:e.jsxs("table",{className:"arg-type-table arg-type-table--full-width",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Parameter"}),e.jsx("th",{children:"Type"}),e.jsx("th",{children:"Default value"}),e.jsx("th",{className:"description-column",children:"Description"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx(n.p,{children:e.jsx(n.code,{children:"prefix"})})}),e.jsx("td",{children:e.jsx(n.p,{children:e.jsx(n.code,{children:"string"})})}),e.jsx("td",{children:e.jsx(n.p,{children:e.jsx(n.code,{children:"undefined"})})}),e.jsx("td",{children:e.jsx(n.p,{children:"A text prefix for the debug logs."})})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsxs(n.p,{children:[e.jsx(n.code,{children:"changes"}),"?"]})}),e.jsx("td",{children:e.jsx(n.p,{children:e.jsx(n.code,{children:"any[]"})})}),e.jsx("td",{children:e.jsx(n.p,{children:e.jsx(n.code,{children:"[]"})})}),e.jsx("td",{children:e.jsx(n.p,{children:"An optional array of dependencies. Debug messages are logged when these values change."})})]})]})]})}),e.jsx(n.h3,{id:"returns",children:"Returns"}),e.jsx(n.p,{children:e.jsx(n.code,{children:"void"})}),e.jsx(n.h3,{id:"example",children:"Example"}),e.jsx(n.pre,{children:e.jsx(n.code,{className:"language-ts",children:`// In this example, the hook logs when the component is mounted, unmounted, and whenever the values in \`changes\` update.\r
// Usage example:\r
function MyComponent({ propA, propB }) {\r
  useDebug("MyComponent", [propA, propB]);\r
  return <div>Hello, world!</div>;\r
}
`})})]})]})]})}function b(s={}){const{wrapper:n}={...t(),...s.components};return n?e.jsx(n,{...s,children:e.jsx(r,{...s})}):r(s)}export{b as default,c as tocItems};
